# Copyright 2021 Adam Chalkley
#
# https://github.com/atc0005/check-vmware
#
# Licensed under the MIT License. See LICENSE file in the project root for
# full license information.



############################################################################
# Automatically detect datacenters, evaluate all of them
############################################################################

# Look at triggered alarms across all detected datacenters, do not evaluate
# any triggered alarms which have been previously acknowledged.
define command{
    command_name    check_vmware_alarms
    command_line    $USER1$/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --trust-cert --log-level info
    }




############################################################################
# Use specified datacenter(s) only (per `--dc-name` flag)
############################################################################


# Look at triggered alarms within specified datacenters. Do not evaluate any
# triggered alarms which have been previously acknowledged.
define command{
    command_name    check_vmware_alarms_specific_dc
    command_line    $USER1$/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --dc-name '$ARG4$' --trust-cert --log-level info
    }

# Look at triggered alarms within specified datacenters. Evaluate any
# triggered alarms which have been previously acknowledged.
define command{
    command_name    check_vmware_alarms_specific_dc_eval_acknowledged
    command_line    $USER1$/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --dc-name '$ARG4$' --eval-acknowledged --trust-cert --log-level info
    }


#------------------------------------------------------------
# Triggered Alarm Entity Type
#------------------------------------------------------------

# Look at triggered alarms for specified managed object types (e.g., Datastore
# and VirtualMachine), within specified datacenters. Do not evaluate any
# triggered alarms which have been previously acknowledged.
define command{
    command_name    check_vmware_alarms_specific_dc_include_entity_type
    command_line    $USER1$/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --dc-name '$ARG4$' --include-entity-type '$ARG5$'  --trust-cert --log-level info
    }

# Look at triggered alarms for specified managed object types (e.g., Datastore
# and VirtualMachine), within specified datacenters. Evaluate any triggered
# alarms which have been previously acknowledged, but not yet resolved.
define command{
    command_name    check_vmware_alarms_specific_dc_include_entity_type_eval_acknowledged
    command_line    $USER1$/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --dc-name '$ARG4$' --include-entity-type '$ARG5$' --eval-acknowledged --trust-cert --log-level info
    }

# Look at triggered alarms associated with managed objects which do not match
# the specified list of managed object types (e.g., Datastore and
# VirtualMachine) within specified datacenters. Do not evaluate any triggered
# alarms which have been previously acknowledged.
define command{
    command_name    check_vmware_alarms_specific_dc_exclude_entity_type
    command_line    $USER1$/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --dc-name '$ARG4$' --exclude-entity-type '$ARG5$' --trust-cert --log-level info
    }

# Look at triggered alarms associated with managed objects which do not match
# the specified list of managed object types (e.g., Datastore and
# VirtualMachine) within specified datacenters. Evaluate any triggered alarms
# which have been previously acknowledged, but not yet resolved.
define command{
    command_name    check_vmware_alarms_specific_dc_exclude_entity_type_eval_acknowledged
    command_line    $USER1$/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --dc-name '$ARG4$' --exclude-entity-type '$ARG5$' --eval-acknowledged --trust-cert --log-level info
    }


#------------------------------------------------------------
# Alarm Name
#------------------------------------------------------------

# Look at triggered alarms whose name matches the specified list of alarm name
# substrings (e.g., "datastore usage on disk"), within specified datacenters.
# Do not evaluate any triggered alarms which have been previously
# acknowledged.
define command{
    command_name    check_vmware_alarms_specific_dc_include_name
    command_line    $USER1$/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --dc-name '$ARG4$' --include-name '$ARG5$' --trust-cert --log-level info
    }

# Look at triggered alarms whose name matches the specified list of alarm name
# substrings (e.g., "datastore usage on disk"), within specified datacenters.
# Evaluate any triggered alarms which have been previously acknowledged, but
# not yet resolved.
define command{
    command_name    check_vmware_alarms_specific_dc_include_name_eval_acknowledged
    command_line    $USER1$/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --dc-name '$ARG4$' --include-name '$ARG5$' --eval-acknowledged --trust-cert --log-level info
    }

# Look at triggered alarms whose name does not match the specified list of
# alarm name substrings (e.g., "datastore usage on disk"), within specified
# datacenters. Do not evaluate any triggered alarms which have been previously
# acknowledged.
define command{
    command_name    check_vmware_alarms_specific_dc_exclude_name
    command_line    $USER1$/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --dc-name '$ARG4$' --exclude-name '$ARG5$' --trust-cert --log-level info
    }

# Look at triggered alarms whose name does not match the specified list of
# alarm name substrings (e.g., "datastore usage on disk") within specified
# datacenters. Evaluate any triggered alarms which have been previously
# acknowledged, but not yet resolved.
define command{
    command_name    check_vmware_alarms_specific_dc_exclude_name_eval_acknowledged
    command_line    $USER1$/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --dc-name '$ARG4$' --exclude-name '$ARG5$' --eval-acknowledged --trust-cert --log-level info
    }


#------------------------------------------------------------
# Alarm Description
#------------------------------------------------------------

# Look at triggered alarms whose description matches the specified list of
# alarm description substrings (e.g., "monitor datastore disk usage"), within
# specified datacenters. Do not evaluate any triggered alarms which have been
# previously acknowledged.
define command{
    command_name    check_vmware_alarms_specific_dc_include_desc
    command_line    $USER1$/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --dc-name '$ARG4$' --include-desc '$ARG5$' --trust-cert --log-level info
    }

# Look at triggered alarms whose description matches the specified list of
# alarm description substrings (e.g., "monitor datastore disk usage"), within
# specified datacenters. Evaluate any triggered alarms which have been
# previously acknowledged, but not yet resolved.
define command{
    command_name    check_vmware_alarms_specific_dc_include_desc_eval_acknowledged
    command_line    $USER1$/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --dc-name '$ARG4$' --include-desc '$ARG5$' --eval-acknowledged --trust-cert --log-level info
    }

# Look at triggered alarms whose description does not match the specified list
# of alarm description substrings (e.g., "monitor datastore disk usage"),
# within specified datacenters. Do not evaluate any triggered alarms which
# have been previously acknowledged.
define command{
    command_name    check_vmware_alarms_specific_dc_exclude_desc
    command_line    $USER1$/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --dc-name '$ARG4$' --exclude-desc '$ARG5$' --trust-cert --log-level info
    }

# Look at triggered alarms whose description does not match the specified list
# of alarm description substrings (e.g., "monitor datastore disk usage")
# within specified datacenters. Evaluate any triggered alarms which have been
# previously acknowledged, but not yet resolved.
define command{
    command_name    check_vmware_alarms_specific_dc_exclude_desc_eval_acknowledged
    command_line    $USER1$/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --dc-name '$ARG4$' --exclude-desc '$ARG5$' --eval-acknowledged --trust-cert --log-level info
    }


#------------------------------------------------------------
# Triggered Alarm Status
#------------------------------------------------------------

# Look at triggered alarms whose status matches the specified list of
# triggered alarm status keywords (e.g., "yellow" or "warning"), within
# specified datacenters. Do not evaluate any triggered alarms which have been
# previously acknowledged.
define command{
    command_name    check_vmware_alarms_specific_dc_include_status
    command_line    $USER1$/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --dc-name '$ARG4$' --include-status '$ARG5$' --trust-cert --log-level info
    }

# Look at triggered alarms whose status matches the specified list of
# triggered alarm status keywords (e.g., "yellow" or "warning"), within
# specified datacenters. Evaluate any triggered alarms which have been
# previously acknowledged, but not yet resolved.
define command{
    command_name    check_vmware_alarms_specific_dc_include_status_eval_acknowledged
    command_line    $USER1$/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --dc-name '$ARG4$' --include-status '$ARG5$' --eval-acknowledged --trust-cert --log-level info
    }

# Look at triggered alarms whose status does not match the specified list of
# triggered alarm status keywords (e.g., "yellow" or "warning"), within
# specified datacenters. Do not evaluate any triggered alarms which have been
# previously acknowledged.
define command{
    command_name    check_vmware_alarms_specific_dc_exclude_status
    command_line    $USER1$/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --dc-name '$ARG4$' --exclude-status '$ARG5$' --trust-cert --log-level info
    }

# Look at triggered alarms whose status does not match the specified list of
# triggered alarm status keywords (e.g., "yellow" or "warning"), within
# specified datacenters. Evaluate any triggered alarms which have been
# previously acknowledged, but not yet resolved.
define command{
    command_name    check_vmware_alarms_specific_dc_exclude_status_eval_acknowledged
    command_line    $USER1$/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --dc-name '$ARG4$' --exclude-status '$ARG5$' --eval-acknowledged --trust-cert --log-level info
    }


#------------------------------------------------------------
# Triggered Alarm Entity Name
#------------------------------------------------------------

# Look at triggered alarms associated with managed objects whose name matches
# the specified list of substrings (e.g., "node1" or "node1.example.com"),
# within specified datacenters. Do not evaluate any triggered alarms which
# have been previously acknowledged.
define command{
    command_name    check_vmware_alarms_specific_dc_include_entity_name
    command_line    $USER1$/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --dc-name '$ARG4$' --include-entity-name '$ARG5$' --trust-cert --log-level info
    }

# Look at triggered alarms associated with managed objects whose name matches
# the specified list of substrings (e.g., "node1" or "node1.example.com"),
# within specified datacenters. Evaluate any triggered alarms which have been
# previously acknowledged, but not yet resolved.
define command{
    command_name    check_vmware_alarms_specific_dc_include_entity_name_eval_acknowledged
    command_line    $USER1$/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --dc-name '$ARG4$' --include-entity-name '$ARG5$' --eval-acknowledged --trust-cert --log-level info
    }

# Look at triggered alarms associated with managed objects whose name does not
# match the specified list of substrings (e.g., "node1" or
# "node1.example.com"), within specified datacenters. Do not evaluate any
# triggered alarms which have been previously acknowledged.
define command{
    command_name    check_vmware_alarms_specific_dc_exclude_entity_name
    command_line    $USER1$/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --dc-name '$ARG4$' --exclude-entity-name '$ARG5$' --trust-cert --log-level info
    }

# Look at triggered alarms associated with managed objects whose name does not
# match the specified list of substrings (e.g., "node1" or
# "node1.example.com"), within specified datacenters. Evaluate any triggered
# alarms which have been previously acknowledged, but not yet resolved.
define command{
    command_name    check_vmware_alarms_specific_dc_exclude_entity_name_eval_acknowledged
    command_line    $USER1$/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --dc-name '$ARG4$' --exclude-entity-name '$ARG5$' --eval-acknowledged --trust-cert --log-level info
    }


#------------------------------------------------------------
# Triggered Alarm Entity Resource Pool
#------------------------------------------------------------

# Look at triggered alarms associated with managed objects whose resource pool
# name matches the specified list of strings (e.g., "Development" or
# "Server Support"), within specified datacenters. Do not evaluate any
# triggered alarms which have been previously acknowledged.
define command{
    command_name    check_vmware_alarms_specific_dc_include_entity_pools
    command_line    $USER1$/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --dc-name '$ARG4$' --include-entity-rp '$ARG5$' --trust-cert --log-level info
    }

# Look at triggered alarms associated with managed objects whose resource pool
# name matches the specified list of strings (e.g., "Development" or "Server
# Support"), within specified datacenters. Evaluate any triggered alarms which
# have been previously acknowledged, but not yet resolved.
define command{
    command_name    check_vmware_alarms_specific_dc_include_entity_pools_eval_acknowledged
    command_line    $USER1$/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --dc-name '$ARG4$' --include-entity-rp '$ARG5$' --eval-acknowledged --trust-cert --log-level info
    }

# Look at triggered alarms whose resource pool name does not match the
# specified list of strings (e.g., "Development" or "Server Support"), within
# specified datacenters. Do not evaluate any triggered alarms which have been
# previously acknowledged.
define command{
    command_name    check_vmware_alarms_specific_dc_exclude_entity_pools
    command_line    $USER1$/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --dc-name '$ARG4$' --exclude-entity-rp '$ARG5$' --trust-cert --log-level info
    }

# Look at triggered alarms whose resource pool name does not match the
# specified list of strings (e.g., "Development" or "Server Support"), within
# specified datacenters. Evaluate any triggered alarms which have been
# previously acknowledged, but not yet resolved.
define command{
    command_name    check_vmware_alarms_specific_dc_exclude_entity_pools_eval_acknowledged
    command_line    $USER1$/check_vmware_alarms --server '$HOSTNAME$' --domain '$ARG1$' --username '$ARG2$' --password '$ARG3$' --dc-name '$ARG4$' --exclude-entity-rp '$ARG5$' --eval-acknowledged --trust-cert --log-level info
    }
